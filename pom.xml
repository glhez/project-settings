<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.glhez.parent</groupId>
  <artifactId>maven-parent</artifactId>
  <version>33-SNAPSHOT</version>

  <packaging>pom</packaging>

  <url>https://github.com/glhez/project-settings</url>

  <name>maven-parent</name>
  <description>
    This project contains settings (dependencies/plugins versions) for my various Java project and set
    some default configuration.
  </description>

  <scm>
    <connection>scm:git:https://github.com/glhez/project-settings</connection>
    <developerConnection>scm:git:git@github.com:glhez/project-settings.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>         <id>glhez-m2-repo-releases</id>  <url>${publish.directory.releases}</url>    </repository>
    <snapshotRepository> <id>glhez-m2-repo-snapshots</id> <url>${publish.directory.snapshots}</url>   </snapshotRepository>
    <site>               <id>glhez-m2-repo-site</id>      <url>${publish.directory.projectSite}</url> </site>
  </distributionManagement>

  <modules>
    <module>settings</module>

    <!--
      Java projects are split by versions.

      - the release flag does not exist in Java version before 9.
      - some Xlint flags about modules does not exists prior to version 9.

      The projects each use maven-toolchain-plugin
    -->
    <module>java-parent</module>
    <module>java-1.8</module>
    <module>java-11</module>
    <module>java-15</module>
  </modules>

  <properties>
    <!--
      Ensure that all project use UTF-8.
    -->
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

    <publish.directory.projectSite>${publish.directory.site}/${project.groupId}</publish.directory.projectSite>

    <enforcer.requireMavenVersion>[3.6.3,3.7.0)</enforcer.requireMavenVersion>

    <!-- configuration file to be used for the maven-formatter-plugin (this is disabled due to CRLF issue
         in the plugin); path is relative to settings project -->
    <formatter.configFile.java>eclipse/code-formatter.xml</formatter.configFile.java>

    <!--
      Publishing properties

      This  must  be  defined  in  settings.xml  and  point  to a local GIT repository containing the mvn-repo
      branches which is used to serve our artifact.

    -->
    <!-- <publish.directory>${session.executionRootDirectory}/target/mvn-repository</publish.directory> -->

    <!-- the default toolchain phase; may be disabled for CI such as Travis or GitHub actions. -->
    <toolchain.phase>validate</toolchain.phase>

    <intdep.version>33-SNAPSHOT</intdep.version>

    <!--
      Versions of dependencies; may be used later (such as in plugin/dependencies since)
    -->
    <dep.junit-bom.version>5.7.1</dep.junit-bom.version>
    <dep.mockito-core.version>3.8.0</dep.mockito-core.version>
    <dep.assertj-core.version>3.19.0</dep.assertj-core.version>
    <dep.memoryfilesystem.version>2.1.0</dep.memoryfilesystem.version>
    <dep.log4j-bom.version>2.14.1</dep.log4j-bom.version>
    <dep.commons-lang3.version>3.12</dep.commons-lang3.version>
    <dep.commons-text.version>1.9</dep.commons-text.version>
    <dep.commons-csv.version>1.8</dep.commons-csv.version>
    <dep.guava.version>30.1.1-jre</dep.guava.version>
    <dep.config.version>1.4.1</dep.config.version>
    <dep.picocli.version>4.6.1</dep.picocli.version>
    <dep.picocli-codegen.version>${dep.picocli.version}</dep.picocli-codegen.version>
    <dep.asm.version>9.1</dep.asm.version>
    <dep.asm-util.version>${dep.asm.version}</dep.asm-util.version>
    <dep.cfr.version>0.151</dep.cfr.version>
    <dep.jansi.version>2.3.2</dep.jansi.version>

    <dep.jmh.version>1.29</dep.jmh.version>
    <dep.jmh-core.version>${dep.jmh.version}</dep.jmh-core.version>
    <dep.jmh-generator-annprocess.version>${dep.jmh.version}</dep.jmh-generator-annprocess.version>

    <dep.bouncycastle.version>1.68</dep.bouncycastle.version>
    <dep.bcprov-jdk15on.version>${dep.bouncycastle.version}</dep.bcprov-jdk15on.version>
    <dep.bcprov-ext-jdk15on.version>${dep.bouncycastle.version}</dep.bcprov-ext-jdk15on.version>
    <dep.bcpkix-jdk15on.version>${dep.bouncycastle.version}</dep.bcpkix-jdk15on.version>
    <dep.bcmail-jdk15on.version>${dep.bouncycastle.version}</dep.bcmail-jdk15on.version>
    <dep.bcpg-jdk15on.version>${dep.bouncycastle.version}</dep.bcpg-jdk15on.version>
    <dep.bctls-jdk15on.version>${dep.bouncycastle.version}</dep.bctls-jdk15on.version>
    <dep.bcprov-debug-jdk15on.version>${dep.bouncycastle.version}</dep.bcprov-debug-jdk15on.version>
    <dep.bcprov-ext-debug-jdk15on.version>${dep.bouncycastle.version}</dep.bcprov-ext-debug-jdk15on.version>
    <dep.saxon-he.version>10.3</dep.saxon-he.version>
    <dep.freemarker.version>2.3.31</dep.freemarker.version>
    <dep.jakarta-jaxb.version>3.0.0</dep.jakarta-jaxb.version>
    <dep.jackson.version>2.12.2</dep.jackson.version>
    <dep.jna.version>5.8.0</dep.jna.version>
    <dep.bson4jackson.version>2.12.0</dep.bson4jackson.version>
    <dep.error-prone.version>2.5.1</dep.error-prone.version>
    <dep.nullaway.version>0.9.0</dep.nullaway.version>
    <dep.spotbugs-annotations.version>4.2.2</dep.spotbugs-annotations.version>

    <!--

      Versions  of  plugin;  used  in rare case, when the plugin is used itself as a pluginManagement in child
      module (java8, java1).

      This fix a warning a versions:display-plugin-updates.

    -->

    <!--
      We use our eclipse-settings-maven-plugin flavor instead of default because it lacks BuildContext and
      logs.
    -->
    <plg.eclipse-settings.version>3.2.2</plg.eclipse-settings.version>
    <plg.formatter.version>2.14.0</plg.formatter.version>
    <plg.spotbugs.version>4.2.2</plg.spotbugs.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency> <groupId>com.github.glhez.parent</groupId>  <artifactId>settings</artifactId>                 <version>${intdep.version}</version>                       <!--scope-->           <!--type-->      </dependency>

      <dependency> <groupId>org.junit</groupId>                <artifactId>junit-bom</artifactId>                <version>${dep.junit-bom.version}</version>                <scope>import</scope>  <type>pom</type> </dependency>
      <dependency> <groupId>org.mockito</groupId>              <artifactId>mockito-core</artifactId>             <version>${dep.mockito-core.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.mockito</groupId>              <artifactId>mockito-junit-jupiter</artifactId>    <version>${dep.mockito-core.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.assertj</groupId>              <artifactId>assertj-core</artifactId>             <version>${dep.assertj-core.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.github.marschall</groupId>     <artifactId>memoryfilesystem</artifactId>         <version>${dep.memoryfilesystem.version}</version>         <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-bom</artifactId>                <version>${dep.log4j-bom.version}</version>                <scope>import</scope>  <type>pom</type> </dependency>
      <dependency> <groupId>org.apache.commons</groupId>       <artifactId>commons-lang3</artifactId>            <version>${dep.commons-lang3.version}</version>            <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.apache.commons</groupId>       <artifactId>commons-csv</artifactId>              <version>${dep.commons-csv.version}</version>              <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.apache.commons</groupId>       <artifactId>commons-text</artifactId>             <version>${dep.commons-text.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.google.guava</groupId>         <artifactId>guava</artifactId>                    <version>${dep.guava.version}</version>                    <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.google.errorprone</groupId>    <artifactId>error_prone_core</artifactId>         <version>${dep.error-prone.version}</version>              <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.google.errorprone</groupId>    <artifactId>error_prone_annotations</artifactId>  <version>${dep.error-prone.version}</version>              <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.uber.nullaway</groupId>        <artifactId>nullaway</artifactId>                 <version>${dep.nullaway.version}</version>                 <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.github.spotbugs</groupId>      <artifactId>spotbugs-annotations</artifactId>     <version>${dep.spotbugs-annotations.version}</version>     <!--scope-->           <!--type-->      </dependency>

      <dependency> <groupId>com.typesafe</groupId>             <artifactId>config</artifactId>                   <version>${dep.config.version}</version>                   <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>info.picocli</groupId>             <artifactId>picocli</artifactId>                  <version>${dep.picocli.version}</version>                  <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>info.picocli</groupId>             <artifactId>picocli-codegen</artifactId>          <version>${dep.picocli-codegen.version}</version>          <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.fusesource.jansi</groupId>     <artifactId>jansi</artifactId>                    <version>${dep.jansi.version}</version>                    <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.ow2.asm</groupId>              <artifactId>asm</artifactId>                      <version>${dep.asm.version}</version>                      <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.ow2.asm</groupId>              <artifactId>asm-util</artifactId>                 <version>${dep.asm-util.version}</version>                 <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.benf</groupId>                 <artifactId>cfr</artifactId>                      <version>${dep.cfr.version}</version>                      <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.openjdk.jmh</groupId>          <artifactId>jmh-core</artifactId>                 <version>${dep.jmh-core.version}</version>                 <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.openjdk.jmh</groupId>          <artifactId>jmh-generator-annprocess</artifactId> <version>${dep.jmh-generator-annprocess.version}</version> <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcprov-jdk15on</artifactId>           <version>${dep.bcprov-jdk15on.version}</version>           <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcprov-ext-jdk15on</artifactId>       <version>${dep.bcprov-ext-jdk15on.version}</version>       <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcpkix-jdk15on</artifactId>           <version>${dep.bcpkix-jdk15on.version}</version>           <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcmail-jdk15on</artifactId>           <version>${dep.bcmail-jdk15on.version}</version>           <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcpg-jdk15on</artifactId>             <version>${dep.bcpg-jdk15on.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bctls-jdk15on</artifactId>            <version>${dep.bctls-jdk15on.version}</version>            <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcprov-debug-jdk15on</artifactId>     <version>${dep.bcprov-debug-jdk15on.version}</version>     <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.bouncycastle</groupId>         <artifactId>bcprov-ext-debug-jdk15on</artifactId> <version>${dep.bcprov-ext-debug-jdk15on.version}</version> <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>net.sf.saxon</groupId>             <artifactId>Saxon-HE</artifactId>                 <version>${dep.saxon-he.version}</version>                 <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>org.freemarker</groupId>           <artifactId>freemarker</artifactId>               <version>${dep.freemarker.version}</version>               <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>com.fasterxml.jackson</groupId>    <artifactId>jackson-bom</artifactId>              <version>${dep.jackson.version}</version>                  <scope>import</scope>  <type>pom</type> </dependency>
      <dependency> <groupId>de.undercouch</groupId>            <artifactId>bson4jackson</artifactId>             <version>${dep.bson4jackson.version}</version>             <!--scope-->           <!--type-->      </dependency>
      <dependency> <groupId>jakarta.xml.bind</groupId>         <artifactId>jakarta.xml.bind-api</artifactId>     <version>${dep.jakarta-jaxb.version}</version>             <scope>compile</scope> <!--type-->      </dependency>
      <dependency> <groupId>com.sun.xml.bind</groupId>         <artifactId>jaxb-impl</artifactId>                <version>${dep.jakarta-jaxb.version}</version>             <scope>runtime</scope> <!--type-->      </dependency>
      <dependency> <groupId>net.java.dev.jna</groupId>         <artifactId>jna</artifactId>                      <version>${dep.jna.version}</version>                      <!--scope-->           <!--type-->      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>

    <pluginManagement>
      <plugins>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId>                     <version>3.3.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-clean-plugin</artifactId>                        <version>3.1.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId>                     <version>3.8.1</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId>                   <version>3.1.2</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-enforcer-plugin</artifactId>                     <version>3.0.0-M3</version>                </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId>                      <version>3.0.0-M1</version>                </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId>                          <version>3.2.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId>                      <version>3.2.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jxr-plugin</artifactId>                          <version>3.0.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-project-info-reports-plugin</artifactId>         <version>3.1.1</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId>                    <version>3.2.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-scm-plugin</artifactId>                          <version>1.11.2</version>                  </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId>                        <version>3.2.4</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-site-plugin</artifactId>                         <version>3.9.1</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId>                       <version>3.2.1</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId>                     <version>3.0.0-M5</version>                </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId>              <version>3.0.0-M5</version>                </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId>                     <version>3.0.0-M5</version>                </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-toolchains-plugin</artifactId>                   <version>3.0.0</version>                   </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId>                          <version>1.6</version>                     </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-deploy-plugin</artifactId>                       <version>3.0.0-M1</version>                </plugin>

        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>appassembler-maven-plugin</artifactId>                 <version>2.1.0</version>                   </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>build-helper-maven-plugin</artifactId>                 <version>3.2.0</version>                   </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>exec-maven-plugin</artifactId>                         <version>3.0.0</version>                   </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>versions-maven-plugin</artifactId>                     <version>2.8.1</version>                   </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>xml-maven-plugin</artifactId>                          <version>1.0.2</version>                   </plugin>
        <plugin> <groupId>com.github.spotbugs</groupId>      <artifactId>spotbugs-maven-plugin</artifactId>                     <version>${plg.spotbugs.version}</version> </plugin>
        <plugin> <groupId>org.ec4j.maven</groupId>           <artifactId>editorconfig-maven-plugin</artifactId>                 <version>0.1.1</version>                   </plugin>
        <plugin> <groupId>org.jacoco</groupId>               <artifactId>jacoco-maven-plugin</artifactId>                       <version>0.8.6</version>                   </plugin>
        <plugin> <groupId>org.lesscss</groupId>              <artifactId>lesscss-maven-plugin</artifactId>                      <version>1.7.0.1.1</version>               </plugin>
        <plugin> <groupId>pl.project13.maven</groupId>       <artifactId>git-commit-id-plugin</artifactId>                      <version>4.0.4</version>                   </plugin>
        <plugin> <groupId>org.assertj</groupId>              <artifactId>assertj-assertions-generator-maven-plugin</artifactId> <version>2.2.0</version>                   </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <tagNameFormat>v@{project.version}</tagNameFormat>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!-- <releaseProfiles>release-sign-artifacts</releaseProfiles> -->
            <arguments> -Prelease-sign-artifacts </arguments>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.glhez</groupId>
          <artifactId>eclipse-settings-maven-plugin</artifactId>
          <version>${plg.eclipse-settings.version}</version>
          <dependencies>
            <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>settings</artifactId> <version>${intdep.version}</version> </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>${plg.formatter.version}</version>
          <dependencies>
            <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>settings</artifactId> <version>${intdep.version}</version> </dependency>
          </dependencies>
          <configuration>
            <configFile>${formatter.configFile.java}</configFile>
            <lineEnding>AUTO</lineEnding>
            <includes>
              <include>**/*.java/</include>
            </includes>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <parameters>true</parameters>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/.gitignore</exclude>
          </excludes>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <inherited>true</inherited>
            <phase>package</phase>
            <goals><goal>jar-no-fork</goal></goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <inherited>true</inherited>
            <goals> <goal>enforce</goal> </goals>
            <configuration>
              <rules>
                <requireMavenVersion> <version>${enforcer.requireMavenVersion}</version>  </requireMavenVersion>
                <bannedDependencies>
                  <excludes>
                    <exclude>commons-logging:commons-logging</exclude>
                  </excludes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <id>git-fetch-revision</id>
            <goals> <goal>revision</goal> </goals>
            <phase>initialize</phase>
            <configuration>
              <dotGitDirectory>${session.executionRootDirectory}/.git</dotGitDirectory>
              <generateGitPropertiesFile>true</generateGitPropertiesFile>
              <generateGitPropertiesFilename>${project.build.outputDirectory}/META-INF/git.properties</generateGitPropertiesFilename>
              <skipPoms>true</skipPoms>
              <includeOnlyProperties>
                <includeOnlyProperty>^\Qgit.commit.id\E$</includeOnlyProperty>
                <includeOnlyProperty>^\Qgit.commit.id.full\E$</includeOnlyProperty>
                <includeOnlyProperty>^\Qgit.commit.time\E$</includeOnlyProperty>
                <includeOnlyProperty>^\Qgit.dirty\E$</includeOnlyProperty>
                <includeOnlyProperty>^\Qgit.branch\E$</includeOnlyProperty>
                <includeOnlyProperty>^\Qgit.closest.tag.name\E$</includeOnlyProperty>
              </includeOnlyProperties>
              <!-- <verbose>true</verbose> -->
              <abbrevLength>40</abbrevLength>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>summary</report>
              <report>dependency-info</report>
              <report>modules</report>
              <report>team</report>
              <report>scm</report>
              <report>issue-management</report>
              <report>mailing-lists</report>
              <report>dependency-management</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>ci-management</report>
              <report>plugin-management</report>
              <report>plugins</report>
              <report>distribution-management</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>jxr</report>
              <report>test-jxr</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!-- Taglist Plugin must be executed after JXR Plugin -->
      <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>taglist-maven-plugin</artifactId> <version>2.4</version>
        <configuration>
          <tagListOptions>
            <tagClasses>
              <tagClass>
                <displayName>FIXME Work</displayName>
                <tags>
                  <tag>
                    <matchString>fixme</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                  <tag>
                    <matchString>@fixme</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
              <tagClass>
                <displayName>Todo Work</displayName>
                <tags>
                  <tag>
                    <matchString>todo</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                  <tag>
                    <matchString>@todo</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
              <tagClass>
                <displayName>Deprecated Work</displayName>
                <tags>
                  <tag>
                    <matchString>@deprecated</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
            </tagClasses>
          </tagListOptions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <detectLinks>true</detectLinks>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin> <groupId>com.github.spotbugs</groupId>      <artifactId>spotbugs-maven-plugin</artifactId> </plugin>
      <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>versions-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId> <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!--
      versions-maven-plugin settings

        The  settings  will  not  work  without  a 'clean install' first because the rules XML file are loaded
        using  a  JAR  rather  than  file. Using a file:// rather than a classpath:// is complex by itself for
        this  reactor  because  we  can't  apply  it to each submodule without resorting to some trick such as
        creating a dummy file and testing for its existence in each module directory.

    -->
    <profile>
      <id>versions-common</id>
      <activation>
        <property> <name>!__force_profile_activation</name> </property>
      </activation>
      <properties>
        <version.baseURI>classpath:///version-rules</version.baseURI>
        <version.file>restricted.xml</version.file>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>versions-maven-plugin</artifactId>
              <dependencies>
                <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>settings</artifactId> <version>${intdep.version}</version> </dependency>
              </dependencies>
              <configuration>
                <rulesUri>${version.baseURI}/${version.file}</rulesUri>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>versions-all</id>
      <properties>
        <version.file>all.xml</version.file>
      </properties>
    </profile>

    <!--
      Codestyle checks

      - If the plugin have a dependency in dependencyManagement, then it must be added to java8/java11: the child
        dependency is not build since the parent activate the plugin, which require the dependency.
      - Each children must provide a disable checker profile, using skipCheckers property.

    -->
    <profile>
      <id>editorconfig-check-enabled</id>
      <activation>
        <property> <name>!m2e.version</name> </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.ec4j.maven</groupId>
            <artifactId>editorconfig-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>.mvn/wrapper/**</exclude>
                <exclude>mvnw*</exclude>
                <exclude>mvnw.cmd</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>editorconfig-check-execution</id>
                <phase>validate</phase>
                <goals> <goal>check</goal> </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>editorconfig-check-disabled</id>
      <activation> <property> <name>skipCheckers</name> </property> </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.ec4j.maven</groupId>
            <artifactId>editorconfig-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>editorconfig-check-execution</id>
                <phase>never</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>spotbugs-check-enabled</id>
      <activation>
        <property> <name>!__force_profile_activation</name> </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold>
              <xmlOutput>true</xmlOutput>
              <!-- don't fail the build on error; at least, until I find a way to filter DLS_DEAD_LOCAL_STORE
                   and URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD -->
              <failOnError>false</failOnError>
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>LATEST</version> <!-- Auto-update to the latest stable -->
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <id>spotbugs-check-execution</id>
                <goals> <goal>check</goal> </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>spotbugs-check-disabled</id>
      <activation> <property> <name>skipCheckers</name> </property> </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>spotbugs-check-execution</id>
                <phase>never</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Sign artifact using GPG:

      - https://blog.sonatype.com/2010/01/how-to-generate-pgp-signatures-with-maven/
      - https://sizeof.cat/post/openpgp-web-key-directory-wkd-hosting/

    -->
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property> <name>performRelease</name> <value>true</value> </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals> <goal>sign</goal> </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Travis  does  not  support  maven-toolchain-plugin, or rather won't have more than one toolchain: having
      several  JDK defined in .travis.yml will only create one more docker instance rather than using the same
      instance with two JDK installed.

      - travis-usurper will enable the toolchain check by setting its phase to validate.
      - travis-common will disable the toolchain check. It is expected that the child module add the following
        activation for each supported JDK

        JDK8 [oraclejdk8]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>1.8</jdk> </activation>

        JDK11 [openjdk11]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>11</jdk> </activation>

    -->
    <profile>
      <id>travis-common</id>
      <activation> <property> <name>env.TRAVIS</name> </property> </activation>
      <properties> <toolchain.phase>none</toolchain.phase> </properties>
    </profile>

    <profile>
      <id>github-common</id>
      <activation> <property> <name>env.GITHUB_ACTION</name> </property> </activation>
      <properties> <toolchain.phase>none</toolchain.phase> </properties>
    </profile>

  </profiles>
</project>
