<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.glhez.parent</groupId>
  <artifactId>maven-parent</artifactId>
  <version>2019.06.02.3</version>

  <packaging>pom</packaging>

  <url>https://github.com/glhez/project-settings</url>

  <name>maven-parent</name>
  <description>
    This project contains settings (dependencies/plugins versions) for my various Java project and set
    some default configuration.
  </description>

  <scm>
    <connection>scm:git:https://github.com/glhez/project-settings</connection>
    <developerConnection>scm:git:github:glhez/project-settings.git</developerConnection>
    <tag>v2019.06.02.3</tag>
  </scm>

  <modules>
    <!--
      Java projects are split by versions.

      - the release flag does not exist in Java version before 9.
      - some Xlint flags about modules does not exists prior to version 9.

      The projects each use maven-toolchain-plugin
    -->
    <module>java8</module>
    <module>java11</module>

    <!--
      Eclipse settings
    -->
    <module>eclipse</module>

    <module>versions-maven-plugin</module>
  </modules>

  <properties>
    <!--
      Ensure that all project use UTF-8.
    -->
    <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

    <enforcer.requireMavenVersion>[3.6.1,3.7.0)</enforcer.requireMavenVersion>

    <!--
      Publishing properties

      This  must  be  defined  in  settings.xml  and  point  to a local GIT repository containing the mvn-repo
      branches which is used to serve our artifact.

    -->
    <!-- <publish.directory>${session.executionRootDirectory}/target/mvn-repository</publish.directory> -->

    <intdep.version>2019.06.02.3</intdep.version>

    <!--
      Versions of dependencies; may be used later (such as in plugin/dependencies since)
    -->
    <dep.junit-bom.version>5.4.2</dep.junit-bom.version>
    <dep.mockito-core.version>2.28.2</dep.mockito-core.version>
    <dep.assertj-core.version>3.12.2</dep.assertj-core.version>
    <dep.memoryfilesystem.version>2.1.0</dep.memoryfilesystem.version>
    <dep.log4j-bom.version>2.11.2</dep.log4j-bom.version>
    <dep.commons-lang3.version>3.9</dep.commons-lang3.version>
    <dep.commons-text.version>1.6</dep.commons-text.version>
    <dep.guava.version>27.1-jre</dep.guava.version>
    <dep.config.version>1.3.4</dep.config.version>
    <dep.picocli.version>3.9.6</dep.picocli.version>
    <dep.asm.version>7.1</dep.asm.version>
    <dep.asm-util.version>${dep.asm.version}</dep.asm-util.version>
    <dep.cfr.version>0.144</dep.cfr.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>versions-maven-plugin</artifactId> <version>${intdep.version}</version> </dependency>
      <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>eclipse</artifactId>               <version>${intdep.version}</version> </dependency>

      <dependency> <groupId>org.junit</groupId>                <artifactId>junit-bom</artifactId>        <version>${dep.junit-bom.version}</version>        <scope>import</scope> <type>pom</type> </dependency>
      <dependency> <groupId>org.mockito</groupId>              <artifactId>mockito-core</artifactId>     <version>${dep.mockito-core.version}</version>     <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.assertj</groupId>              <artifactId>assertj-core</artifactId>     <version>${dep.assertj-core.version}</version>     <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>com.github.marschall</groupId>     <artifactId>memoryfilesystem</artifactId> <version>${dep.memoryfilesystem.version}</version> <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-bom</artifactId>        <version>${dep.log4j-bom.version}</version>        <scope>import</scope> <type>pom</type> </dependency>
      <dependency> <groupId>org.apache.commons</groupId>       <artifactId>commons-lang3</artifactId>    <version>${dep.commons-lang3.version}</version>    <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.apache.commons</groupId>       <artifactId>commons-text</artifactId>     <version>${dep.commons-text.version}</version>     <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>com.google.guava</groupId>         <artifactId>guava</artifactId>            <version>${dep.guava.version}</version>            <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>com.typesafe</groupId>             <artifactId>config</artifactId>           <version>${dep.config.version}</version>           <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>info.picocli</groupId>             <artifactId>picocli</artifactId>          <version>${dep.picocli.version}</version>          <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.ow2.asm</groupId>              <artifactId>asm</artifactId>              <version>${dep.asm.version}</version>              <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.ow2.asm</groupId>              <artifactId>asm-util</artifactId>         <version>${dep.asm-util.version}</version>         <!--scope-->          <!--type-->      </dependency>
      <dependency> <groupId>org.benf</groupId>                 <artifactId>cfr</artifactId>              <version>${dep.cfr.version}</version>              <!--scope-->          <!--type-->      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- build configuration -->
  <build>
    <pluginManagement>
      <plugins>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-assembly-plugin</artifactId>             <version>3.1.1</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-clean-plugin</artifactId>                <version>3.1.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId>             <version>3.8.1</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId>           <version>3.1.1</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-enforcer-plugin</artifactId>             <version>3.0.0-M2</version>    </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId>              <version>3.0.0-M1</version>    </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId>                  <version>3.1.2</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId>              <version>3.1.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jxr-plugin</artifactId>                  <version>3.0.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-project-info-reports-plugin</artifactId> <version>3.0.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId>            <version>3.1.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-scm-plugin</artifactId>                  <version>1.11.2</version>      </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId>                <version>3.2.1</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-site-plugin</artifactId>                 <version>3.7.1</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId>               <version>3.1.0</version>       </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId>             <version>3.0.0-M3</version>    </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId>      <version>3.0.0-M3</version>    </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId>             <version>3.0.0-M3</version>    </plugin>
        <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-toolchains-plugin</artifactId>           <version>1.1</version>         </plugin>

        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>appassembler-maven-plugin</artifactId>         <version>2.1.0</version>       </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>build-helper-maven-plugin</artifactId>         <version>3.0.0</version>       </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>exec-maven-plugin</artifactId>                 <version>1.6.0</version>       </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>versions-maven-plugin</artifactId>             <version>2.7</version>         </plugin>
        <plugin> <groupId>org.codehaus.mojo</groupId>        <artifactId>xml-maven-plugin</artifactId>                  <version>1.0.2</version>       </plugin>
        <plugin> <groupId>org.ec4j.maven</groupId>           <artifactId>editorconfig-maven-plugin</artifactId>         <version>0.0.10</version>      </plugin>
        <plugin> <groupId>org.jacoco</groupId>               <artifactId>jacoco-maven-plugin</artifactId>               <version>0.8.4</version>       </plugin>
        <plugin> <groupId>org.lesscss</groupId>              <artifactId>lesscss-maven-plugin</artifactId>              <version>1.7.0.1.1</version>   </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
          <configuration>
            <tagNameFormat>v@{project.version}</tagNameFormat>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <altReleaseDeploymentRepository>gh-mvn-repo-releases::${publish.directory}/releases</altReleaseDeploymentRepository>
            <altSnapshotDeploymentRepository>gh-mvn-repo-snapshots::${publish.directory}/snapshots</altSnapshotDeploymentRepository>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.eclipse.scout</groupId>
          <artifactId>eclipse-settings-maven-plugin</artifactId>
          <version>3.0.3</version>
          <dependencies>
            <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>eclipse</artifactId> <version>${intdep.version}</version> </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <parameters>true</parameters>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <compilerArgs>
            <arg>-Xlint</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <excludes><exclude>**/.gitignore</exclude></excludes>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <inherited>true</inherited>
            <phase>package</phase>
            <goals><goal>jar</goal></goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <inherited>true</inherited>
            <goals> <goal>enforce</goal> </goals>
            <configuration>
              <rules>
                <requireMavenVersion> <version>${enforcer.requireMavenVersion}</version>  </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <!--
      versions-maven-plugin settings

        The  settings  will  not  work  without  a 'clean install' first because the rules XML file are loaded
        using  a  JAR  rather  than  file. Using a file:// rather than a classpath:// is complex by itself for
        this  reactor  because  we  can't  apply  it to each submodule without resorting to some trick such as
        creating a dummy file and testing for its existence in each module directory.

    -->
    <profile>
      <id>versions-common</id>
      <activation>
        <property> <name>!__force_profile_activation</name> </property>
      </activation>
      <properties>
        <version.baseURI>classpath://</version.baseURI>
        <version.file>restricted.xml</version.file>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>versions-maven-plugin</artifactId>
              <dependencies>
                <dependency> <groupId>com.github.glhez.parent</groupId> <artifactId>versions-maven-plugin</artifactId> <version>${project.version}</version> </dependency>
              </dependencies>
              <configuration>
                <rulesUri>${version.baseURI}/${version.file}</rulesUri>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>versions-all</id>
      <properties>
        <version.file>all.xml</version.file>
      </properties>
    </profile>

    <!--
      Basic formatting

      Ensure  that  source  file are using what was defined in .editorconfig; also imply that such file exists
      somewhere near the file depending on this pom.

      The configuration is disabled on Eclipse, since m2e does not recognize it.

    -->
    <profile>
      <id>editorconfig</id>
      <activation>
        <property> <name>!m2e.version</name> </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.ec4j.maven</groupId>
            <artifactId>editorconfig-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>editorconfig-check</id>
                <phase>validate</phase>
                <goals> <goal>check</goal> </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Allow skipping (occasionnaly) editorconfig and other checkers
    -->
    <profile>
      <id>skip-checkers</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.ec4j.maven</groupId>
            <artifactId>editorconfig-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>editorconfig-check</id>
                <phase>never</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
      Travis  does  not  support  maven-toolchain-plugin, or rather won't have more than one toolchain: having
      several  JDK defined in .travis.yml will only create one more docker instance rather than using the same
      instance with two JDK installed.

      - travis-usurper will enable the toolchain check by setting its phase to validate.
      - travis-common will disable the toolchain check. It is expected that the child module add the following
        activation for each supported JDK

        JDK8 [oraclejdk8]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>1.8</jdk> </activation>

        JDK11 [openjdk11]
        <activation> <property> <name>env.TRAVIS</name> </property> <jdk>11</jdk> </activation>

    -->
    <profile>
      <id>travis-usurper</id>
      <activation> <property> <name>!env.TRAVIS</name> </property> </activation>
      <properties> <toolchain.phase>validate</toolchain.phase> </properties>
    </profile>

    <profile>
      <id>travis-common</id>
      <activation> <property> <name>env.TRAVIS</name> </property> </activation>
      <properties> <toolchain.phase>none</toolchain.phase> </properties>
    </profile>

  </profiles>
</project>

